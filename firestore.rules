rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Game sets can be read by anyone, but only created/updated/deleted by their owner.
    // Exception: Anyone can update the playCount.
    match /game-sets/{gameSetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
      allow update: if request.auth != null && 
                      (resource.data.creatorId == request.auth.uid || isUpdatingPlayCountOnly());
    }

    // Game rooms can be created by any authenticated user.
    // Reading and writing is allowed if the user is authenticated (logic is handled in backend).
    match /game-rooms/{roomId} {
      allow read, write: if request.auth != null;
    }
    
    // Users can read/write their own data.
    // Any authenticated user can read other user's data for nickname/email lookup.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Users can only manage their own playedGameSets subcollection.
      match /playedGameSets/{playedId} {
        allow read, write: if request.auth.uid == userId;
      }
      
      // Users can only manage their own incorrect-answers subcollection.
      match /incorrect-answers/{answerId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    // Helper function to check if only the playCount is being incremented.
    function isUpdatingPlayCountOnly() {
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['playCount']) &&
             request.resource.data.playCount == resource.data.playCount + 1;
    }
  }
}
