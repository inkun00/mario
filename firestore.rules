rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isRoomHost(roomId) {
      return get(/databases/$(database)/documents/game-rooms/$(roomId)).data.hostId == request.auth.uid;
    }

    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      
      allow update: if request.auth != null && (
        isOwner(userId) ||
        (
          request.auth == null
        ) ||
        (
          'gameRoomId' in request.resource.data &&
          isRoomHost(request.resource.data.gameRoomId) &&
          request.resource.data.keys().hasOnly(['xp', 'gameRoomId'])
        )
      );

      match /playedGameSets/{gameSetId} {
        allow write: if request.auth != null &&
          (isOwner(userId) || 
          ('gameRoomId' in request.resource.data && isRoomHost(request.resource.data.gameRoomId)));
      }
    }

    match /game-rooms/{roomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null;
    }

    match /game-sets/{gameSetId} {
      allow read: if request.auth != null;
      allow update: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if request.auth != null && (resource.data.creatorId == request.auth.uid);
    }
  }
}
