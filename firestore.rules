rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // AUTH: Anyone can create a user doc on signup.
    // Users can read other user profiles, but only write to their own.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if isOwner(userId);

      // Sub-collection for played games
      // Allow any authenticated user to READ, but only owner can WRITE.
      match /playedGameSets/{gameSetId} {
        allow read: if request.auth != null;
        allow write: if isOwner(userId);
      }
      
      // Sub-collection for incorrect answers
      match /incorrect-answers/{answerId} {
        allow read, write, delete: if isOwner(userId);
      }
    }
    
    // GAME SETS: Must be authenticated to create. Creator can update/delete.
    // Anyone can read. Special rule for updating playCount.
    match /game-sets/{gameSetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow delete: if resource.data.creatorId == request.auth.uid;
      allow update: if resource.data.creatorId == request.auth.uid || request.resource.data.diff(resource.data).affectedKeys().hasOnly(['playCount']);
    }

    // GAME ROOMS: Must be authenticated.
    match /game-rooms/{roomId} {
       allow read, write: if request.auth != null;
    }
    
    // ANSWER LOGS: Users can only read their own answer logs.
    match /answerLogs/{logId} {
        allow read: if request.auth != null && resource.data.userId == request.auth.uid;
        allow write: if request.auth != null; // Server-side actions handle this
    }
  }
}
