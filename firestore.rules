rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Any authenticated user can read user profiles (to find players)
      allow read: if request.auth != null;
      
      // Only the owner or the server can write/update/delete user data
      allow write: if isOwner(userId) || request.auth == null;

      // Rules for the 'playedGameSets' subcollection
      match /playedGameSets/{gameSetId} {
        // Any authenticated user can read play history (to check for duplicates)
        allow read: if request.auth != null;
        // Only the owner can write to their own play history
        allow write: if isOwner(userId);
      }

      // Rules for 'incorrect-answers' subcollection
      match /incorrect-answers/{answerId} {
        // Only the owner can manage their incorrect answers
        allow read, write, delete: if isOwner(userId);
      }
    }

    // Rules for 'game-sets' collection
    match /game-sets/{gameSetId} {
      // Any authenticated user can read, create, and update game sets
      allow read, create, update: if request.auth != null;
      // Deletion is restricted to the creator
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Rules for 'game-rooms' collection
    match /game-rooms/{roomId} {
       // Any authenticated user can create, read, and update game rooms.
      allow read, create, update: if request.auth != null;
      // Only the host can delete the room
      allow delete: if request.auth != null && resource.data.hostId == request.auth.uid;
    }

    // Deprecated: answerLogs are now subcollections of game-rooms
    match /answerLogs/{logId} {
      allow read, write: if request.auth != null;
    }
  }
}
