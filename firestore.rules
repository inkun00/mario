rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    //
    // Functions
    //
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isUpdatingPlayCountOnly() {
      // Check that only 'playCount' is being incremented by 1.
      return request.resource.data.diff(resource.data).affectedKeys().hasOnly(['playCount'])
             && request.resource.data.playCount == resource.data.playCount + 1;
    }

    //
    // Rules
    //
    match /users/{userId} {
      allow read: if true;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
      
      match /correct-answers/{docId} {
          allow read, write: if isOwner(userId);
      }
      match /incorrect-answers/{docId} {
          allow read, write: if isOwner(userId);
      }
    }
    
    match /game-sets/{gameSetId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update: if (isOwner(resource.data.creatorId)) || (isUpdatingPlayCountOnly());
      allow delete: if isOwner(resource.data.creatorId);
    }
    
    match /game-rooms/{gameRoomId} {
      allow create: if isSignedIn();
      allow read, update: if isSignedIn();
      // Disallow delete for now to prevent accidental deletion during a game.
      allow delete: if false;
    }
  }
}
