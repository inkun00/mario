rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    match /game-sets/{gameSetId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.auth != null && (
        resource.data.creatorId == request.auth.uid ||
        (request.resource.data.playCount == resource.data.playCount + 1 && request.writeFields.size() == 1 && 'playCount' in request.writeFields)
      );
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    match /game-rooms/{roomId} {
      allow read, update: if request.auth != null;
      allow create: if request.auth != null;
      allow delete: if true;
    }

    match /users/{userId} {
      allow read, create, update, delete: if isOwner(userId);

      match /playedGameSets/{playedGameSetId} {
        allow read: if request.auth != null;
        allow write: if isOwner(userId);
      }
      
      match /incorrect-answers/{incorrectAnswerId} {
        allow read, write, delete: if isOwner(userId);
      }
    }
    
    match /answerLogs/{logId} {
       allow read: if request.auth != null && resource.data.userId == request.auth.uid;
       allow create: if request.auth != null;
    }
  }
}
