rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for 'game-sets' collection
    match /game-sets/{gameSetId} {
      // Anyone can create a game set if they are signed in.
      allow create: if isSignedIn();

      // Anyone can read game sets.
      allow read: if true;

      // Allow updates only under specific conditions:
      // 1. The user is the owner of the document.
      // 2. The update is ONLY incrementing the 'playCount' field by 1.
      allow update: if (isOwner(resource.data.creatorId)) ||
                       (request.resource.data.playCount == resource.data.playCount + 1 &&
                        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['playCount']));

      // Only the owner can delete their own game set.
      allow delete: if isOwner(resource.data.creatorId);
    }

    // Rules for 'users' collection
    match /users/{userId} {
      // A user can only read or write to their own document.
      allow read, write: if isOwner(userId);

      // Rules for 'playedGameSets' subcollection
      match /playedGameSets/{playedGameSetId} {
        // A user can only manage their own played game sets records.
        allow read, write: if isOwner(userId);
      }
      
      // Rules for 'incorrect-answers' subcollection
      match /incorrect-answers/{answerId} {
        // A user can manage their own incorrect answers.
        allow read, write, delete: if isOwner(userId);
      }
    }
    
    // Rules for 'game-rooms' collection
    match /game-rooms/{roomId} {
        // Anyone can read a game room to check its status.
        allow read: if true;
        
        // Signed-in users can create rooms.
        // Updates are allowed if signed-in (e.g., joining, starting game, submitting answers).
        allow create, update: if isSignedIn();
    }
  }
}
