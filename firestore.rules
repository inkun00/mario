
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Game sets can be read by anyone, but only created/updated by authenticated users.
    match /game-sets/{gameSetId} {
      allow read: if true;
      allow create: if request.auth != null;
      // Allow update if the user is the creator OR if only the playCount is being incremented.
      allow update: if request.auth != null &&
                      (resource.data.creatorId == request.auth.uid ||
                       (request.resource.data.playCount == resource.data.playCount + 1 &&
                        request.resource.data.keys().hasOnly(['creatorId', 'creatorNickname', 'title', 'description', 'grade', 'semester', 'subject', 'unit', 'isPublic', 'questions', 'createdAt', 'playCount', 'id'])));
      allow delete: if request.auth != null && resource.data.creatorId == request.auth.uid;
    }

    // Game rooms can be created by authenticated users.
    // They can be read or updated by anyone for simplicity during gameplay.
    match /game-rooms/{roomId} {
      allow read, update, delete: if true;
      allow create: if request.auth != null;
    }

    // Users collection
    match /users/{userId} {
      // Allow authenticated users to read any user's profile for lobby validation.
      allow read: if request.auth != null;
      // Users can only write to their own document.
      allow create, update, delete: if request.auth != null && request.auth.uid == userId;

      // Rules for subcollections of users
      match /playedGameSets/{gameSetId} {
        // Any authenticated user can check if another user has played a set.
        allow read: if request.auth != null;
        // A user can only write to their own playedGameSets records.
        allow write: if request.auth.uid == userId;
      }

      match /incorrect-answers/{answerId} {
        // A user can only read/write their own incorrect answers.
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Answer logs can be created by anyone authenticated.
    // They can be read only by the user who created them for privacy.
    match /answerLogs/{logId} {
      allow create: if request.auth != null;
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
    }
  }
}
